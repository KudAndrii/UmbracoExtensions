{"version":3,"file":"client.js","sources":["../client/src/property-editor-ui-ak-dropdown.element.ts"],"sourcesContent":["import { css, customElement, html, map, nothing, property, state } from '@umbraco-cms/backoffice/external/lit'\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element'\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event'\nimport { UUISelectElement } from '@umbraco-cms/backoffice/external/uui'\nimport type {\n    UmbPropertyEditorConfigCollection,\n    UmbPropertyEditorUiElement,\n} from '@umbraco-cms/backoffice/property-editor'\nimport type { UUISelectEvent } from '@umbraco-cms/backoffice/external/uui'\n\n@customElement('ak-property-editor-ui-dropdown')\nexport class UmbPropertyEditorUIDropdownElement extends UmbLitElement implements UmbPropertyEditorUiElement {\n    #selection: Array<string> = []\n\n    @property({ type: Array })\n    public set value(value: Array<string> | string | undefined) {\n        this.#selection = Array.isArray(value) ? value : value ? [ value ] : []\n    }\n\n    public get value(): Array<string> | undefined {\n        return this.#selection\n    }\n\n    @property({ type: Boolean, reflect: true }) readonly = false\n\n    public set config(config: UmbPropertyEditorConfigCollection | undefined) {\n        if (!config) return\n\n        const items: Array<{ key: string, value: string }> | undefined = config.getValueByAlias('items')\n        const defaultValue: string | undefined = config.getValueByAlias('default')\n\n        if (!!defaultValue && this.#selection.length === 0) {\n            this.#setValue([defaultValue])\n        }\n\n        if (Array.isArray(items) && items.length > 0) {\n            this._options = items.map((item) => ({\n                name: item.value,\n                value: item.key,\n                selected: this.#selection.includes(item.key)\n            }))\n\n            // If selection includes a value not in the list, add it to the list\n            this.#selection.forEach((value) => {\n                if (!this._options.find((item) => item.value === value)) {\n                    this._options.push({\n                        name: `${ value } (${ this.localize.term('validation_legacyOption') })`,\n                        value,\n                        selected: true,\n                        invalid: true,\n                    })\n                }\n            })\n        }\n\n        this._multiple = config.getValueByAlias<boolean>('multiple') ?? false\n    }\n\n    @state() private _multiple: boolean = false\n\n    @state() private _options: Array<Option & { invalid?: boolean }> = []\n\n    #onChange(event: UUISelectEvent) {\n        const value = event.target.value as string\n        this.#setValue(value ? [ value ] : [])\n    }\n\n    #onChangeMultiple(event: Event & { target: HTMLSelectElement }) {\n        const selected = event.target.selectedOptions\n        const value = selected ? Array.from(selected).map((option) => option.value) : []\n        this.#setValue(value)\n    }\n\n    #setValue(value: Array<string> | string | null | undefined) {\n        if (!value) return\n        this.value = value\n        this.dispatchEvent(new UmbChangeEvent())\n    }\n\n    override render() {\n        return this._multiple ? this.#renderDropdownMultiple() : this.#renderDropdownSingle()\n    }\n\n    #renderDropdownMultiple() {\n        if (this.readonly) {\n            return html`\n              <div>${ this.value?.join(', ') }</div>`\n        }\n\n        return html`\n          <select id=\"native\" multiple @change=${ this.#onChangeMultiple }>\n            ${ map(\n              this._options,\n              (item) => html`\n                <option value=${ item.value } ?selected=${ item.selected }>${ item.name }</option>\n              `,\n            ) }\n          </select>\n          ${ this.#renderDropdownValidation() }\n        `\n    }\n\n    #renderDropdownSingle() {\n        return html`\n          <umb-input-dropdown-list\n            .options=${ this._options }\n            @change=${ this.#onChange }\n            ?readonly=${ this.readonly }></umb-input-dropdown-list>\n          ${ this.#renderDropdownValidation() }\n        `\n    }\n\n    #renderDropdownValidation() {\n        const selectionHasInvalids = this.#selection.some((value) => {\n            const option = this._options.find((item) => item.value === value)\n            return option ? option.invalid : false\n        })\n\n        if (selectionHasInvalids) {\n            return html`\n              <div class=\"error\">\n                <umb-localize key=\"validation_legacyOptionDescription\"></umb-localize>\n              </div>`\n        }\n\n        return nothing\n    }\n\n    static override readonly styles = [\n        UUISelectElement.styles,\n        css`\n            #native {\n                height: auto;\n            }\n\n            .error {\n                color: var(--uui-color-danger);\n                font-size: var(--uui-font-size-small);\n            }\n        `,\n    ];\n}\n\nexport default UmbPropertyEditorUIDropdownElement\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'ak-property-editor-ui-dropdown': UmbPropertyEditorUIDropdownElement\n    }\n}\n"],"names":["_selection","_UmbPropertyEditorUIDropdownElement_instances","onChange_fn","onChangeMultiple_fn","setValue_fn","renderDropdownMultiple_fn","renderDropdownSingle_fn","renderDropdownValidation_fn","UmbPropertyEditorUIDropdownElement","UmbLitElement","__privateAdd","value","__privateSet","__privateGet","config","items","defaultValue","__privateMethod","item","event","selected","option","UmbChangeEvent","html","_a","map","nothing","UUISelectElement","css","__decorateClass","property","state","customElement","UmbPropertyEditorUIDropdownElement$1"],"mappings":"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"}