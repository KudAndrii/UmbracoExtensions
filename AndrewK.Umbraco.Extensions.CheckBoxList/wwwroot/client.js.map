{"version":3,"file":"client.js","sources":["../client/src/property-editor-ui-ak-check-box-list.element.ts"],"sourcesContent":["import { customElement, html, property, state } from '@umbraco-cms/backoffice/external/lit'\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event'\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element'\nimport { UMB_VALIDATION_EMPTY_LOCALIZATION_KEY, UmbFormControlMixin } from '@umbraco-cms/backoffice/validation'\nimport type {\n\tUmbPropertyEditorConfigCollection,\n\tUmbPropertyEditorUiElement,\n} from '@umbraco-cms/backoffice/property-editor'\n\n@customElement('ak-property-editor-ui-check-box-list')\nexport class AkPropertyEditorUICheckBoxListElement\n\textends UmbFormControlMixin<Array<string> | string | undefined, typeof UmbLitElement, undefined>(\n\t\tUmbLitElement,\n\t\tundefined,\n\t)\n\timplements UmbPropertyEditorUiElement\n{\n\t#selection: Array<string> = []\n\n\t@property({ type: Array })\n\tpublic override set value(value: Array<string> | string | undefined) {\n\t\tthis.#selection = Array.isArray(value) ? value : value ? [value] : []\n\t}\n\tpublic override get value(): Array<string> | undefined {\n\t\treturn this.#selection\n\t}\n\n\tpublic set config(config: UmbPropertyEditorConfigCollection | undefined) {\n\t\tif (!config) return\n\n\t\tconst items: Array<{ key: string, value: string }> | undefined = config.getValueByAlias('items')\n\t\tconst defaultValue: string | undefined = config.getValueByAlias('default')\n\n\t\tif (!!defaultValue && this.#selection.length === 0) {\n\t\t\tthis.#selection.push(defaultValue)\n\t\t\tthis.dispatchEvent(new UmbChangeEvent())\n\t\t}\n\n\t\tif (Array.isArray(items) && items.length) {\n\t\t\tthis._list = items.map((item) => ({\n\t\t\t\tlabel: item.value,\n\t\t\t\tvalue: item.key,\n\t\t\t\tchecked: this.#selection.includes(item.key),\n\t\t\t}))\n\n\t\t\t// If selection includes a value that is not in the list, add it to the list\n\t\t\tthis.#selection.forEach((value) => {\n\t\t\t\tif (!this._list.find((item) => item.value === value)) {\n\t\t\t\t\tthis._list.push({ label: value, value, checked: true, invalid: true })\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\t@property({ type: Boolean, reflect: true }) readonly = false\n\t@property({ type: Boolean }) mandatory?: boolean\n\t@property({ type: String }) mandatoryMessage = UMB_VALIDATION_EMPTY_LOCALIZATION_KEY\n\n\t@state()\n\tprivate _list: Array<{ label: string, value: string, checked: boolean, invalid?: boolean }> = []\n\n\tprotected override firstUpdated() {\n\t\tthis.addFormControlElement(this.shadowRoot!.querySelector('umb-input-checkbox-list')!)\n\t}\n\n\t#onChange(event: CustomEvent) {\n\t\tif (!!event?.target && 'selection' in event.target) {\n\t\t\tthis.value = event.target.selection as Array<string>\n\t\t\tthis.dispatchEvent(new UmbChangeEvent())\t\n\t\t}\n\t}\n\n\toverride render() {\n\t\treturn html`\n\t\t\t<umb-input-checkbox-list\n\t\t\t\t.list=${this._list}\n\t\t\t\t.required=${this.mandatory}\n\t\t\t\t.requiredMessage=${this.mandatoryMessage}\n\t\t\t\t.selection=${this.#selection}\n\t\t\t\t?readonly=${this.readonly}\n\t\t\t\t@change=${this.#onChange}>\n\t\t\t</umb-input-checkbox-list>\n\t\t`\n\t}\n}\n\nexport default AkPropertyEditorUICheckBoxListElement\n\ndeclare global {\n\tinterface HTMLElementTagNameMap {\n\t\t'ak-property-editor-ui-check-box-list': AkPropertyEditorUICheckBoxListElement\n\t}\n}\n"],"names":["_selection","_AkPropertyEditorUICheckBoxListElement_instances","onChange_fn","AkPropertyEditorUICheckBoxListElement","UmbFormControlMixin","UmbLitElement","__privateAdd","UMB_VALIDATION_EMPTY_LOCALIZATION_KEY","value","__privateSet","__privateGet","config","items","defaultValue","UmbChangeEvent","item","html","__privateMethod","event","__decorateClass","property","state","customElement","AkPropertyEditorUICheckBoxListElement$1"],"mappings":";;;;;;;;;;wYAAAA,GAAAC,GAAAC;AAUO,IAAMC,IAAN,cACEC;AAAA,EACPC;AAAA,EACA;AACD,EAED;AAAA,EANO,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAL,CAAA,GAONK,EAAA,MAAAN,GAA4B,EAAC,GAqC0B,KAAA,WAAA,IAER,KAAA,mBAAAO,GAG/C,KAAQ,QAAsF,CAAC;AAAA,EAAA;AAAA,EAvC/F,IAAoB,MAAMC,GAA2C;AAC/D,IAAAC,EAAA,MAAAT,GAAa,MAAM,QAAQQ,CAAK,IAAIA,IAAQA,IAAQ,CAACA,CAAK,IAAI,CAAA,CAAC;AAAA,EAAA;AAAA,EAErE,IAAoB,QAAmC;AACtD,WAAOE,EAAK,MAAAV,CAAA;AAAA,EAAA;AAAA,EAGb,IAAW,OAAOW,GAAuD;AACxE,QAAI,CAACA,EAAQ;AAEP,UAAAC,IAA2DD,EAAO,gBAAgB,OAAO,GACzFE,IAAmCF,EAAO,gBAAgB,SAAS;AAEzE,IAAME,KAAgBH,EAAK,MAAAV,CAAA,EAAW,WAAW,MAC3CU,EAAA,MAAAV,CAAA,EAAW,KAAKa,CAAY,GAC5B,KAAA,cAAc,IAAIC,GAAgB,IAGpC,MAAM,QAAQF,CAAK,KAAKA,EAAM,WACjC,KAAK,QAAQA,EAAM,IAAI,CAACG,OAAU;AAAA,MACjC,OAAOA,EAAK;AAAA,MACZ,OAAOA,EAAK;AAAA,MACZ,SAASL,EAAA,MAAKV,CAAW,EAAA,SAASe,EAAK,GAAG;AAAA,IAAA,EACzC,GAGGL,EAAA,MAAAV,CAAA,EAAW,QAAQ,CAACQ,MAAU;AAC9B,MAAC,KAAK,MAAM,KAAK,CAACO,MAASA,EAAK,UAAUP,CAAK,KAC7C,KAAA,MAAM,KAAK,EAAE,OAAOA,GAAO,OAAAA,GAAO,SAAS,IAAM,SAAS,GAAA,CAAM;AAAA,IACtE,CACA;AAAA,EACF;AAAA,EAUkB,eAAe;AACjC,SAAK,sBAAsB,KAAK,WAAY,cAAc,yBAAyB,CAAE;AAAA,EAAA;AAAA,EAU7E,SAAS;AACV,WAAAQ;AAAA;AAAA,YAEG,KAAK,KAAK;AAAA,gBACN,KAAK,SAAS;AAAA,uBACP,KAAK,gBAAgB;AAAA,iBAC3BN,QAAKV,CAAU,CAAA;AAAA,gBAChB,KAAK,QAAQ;AAAA,cACfiB,QAAKhB,GAASC,CAAA,CAAA;AAAA;AAAA;AAAA,EAAA;AAI5B;AAnECF,IAAA,oBAAA,QAAA;AAPMC,IAAA,oBAAA,QAAA;AAuDNC,IAAS,SAACgB,GAAoB;AAC7B,EAAMA,KAAA,QAAAA,EAAO,UAAU,eAAeA,EAAM,WACtC,KAAA,QAAQA,EAAM,OAAO,WACrB,KAAA,cAAc,IAAIJ,GAAgB;AAEzC;AAlDoBK,EAAA;AAAA,EADnBC,EAAS,EAAE,MAAM,MAAO,CAAA;AAAA,GATbjB,EAUQ,WAAA,SAAA,CAAA;AAkCwBgB,EAAA;AAAA,EAA3CC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GA5C9BjB,EA4CgC,WAAA,YAAA,CAAA;AACfgB,EAAA;AAAA,EAA5BC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA7CfjB,EA6CiB,WAAA,aAAA,CAAA;AACDgB,EAAA;AAAA,EAA3BC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA9CdjB,EA8CgB,WAAA,oBAAA,CAAA;AAGpBgB,EAAA;AAAA,EADPE,EAAM;AAAA,GAhDKlB,EAiDJ,WAAA,SAAA,CAAA;AAjDIA,IAANgB,EAAA;AAAA,EADNG,EAAc,sCAAsC;AAAA,GACxCnB,CAAA;AA4Eb,MAAAoB,IAAepB;"}